// BullsAndCows
#include <iostream>
#include <locale.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

using namespace std;
//глобальная константа - размер массива
const int Size = 3;
//глобальный массив, хранящий загаданное число
int Number[Size];
//глобальный массив, хранящий вводимое игроком число 
int Value[Size];
//прототип функции загадывания(генерации) числа
void SetNumber();
//прототип функции преобразования(нарезки) числа введенного игроком в массив цифр
void Slice(int);
//прототип функции сравнения и определения результата(возвращает кол-во быков)
int Result();

int main()
{
    setlocale(LC_ALL, "rus");
    srand(time(NULL));
    cout << "---Игра Быки и Коровы!---" << endl;
    int Win = 0, Digit = 0;
    SetNumber();
    //тестовый вывод числа заданного числа
    for (int i = 0; i < Size; i++)
    {
        cout << Number[i];
    }
    cout << endl;
    do //цикл игры до победы
    {
        do  //цикл ввода числа
        {
            cout << "Введите " << Size << "-значное число, состоящее из разных цифр: ";
            cin >> Digit;
            if (Digit < pow(10, Size - 1) || Digit >= pow(10, Size))
                cout << "Некорректный ввод! Проверьте кол-во знаков!" << endl;
        } while (Digit < pow(10, Size - 1) || Digit >= pow(10, Size)); //если число число меньше 1000 и больше равно 10000 
        Slice(Digit); //нарезаем число
        Win = Result(); //считаем кол-во быков и коров и помещаем кол-во быков в переменную Win
    } while (Win != Size);//играем пока кол-во быков не равно кол-ву цифр в загаданном числе
    cout << "Вы угадали! Загаданное число: " << Digit << endl;
    system("pause");
}
//реализация функции загадывания(генерации) числа
void SetNumber()
{
    //генерация первой цифры в числе
    Number[0] = rand() % 9 + 1; //от 1 до 9 включительно
    for (int i = 1; i < Size; i++) //цикл генерации оставшихся цифр в числе
    {
        Number[i] = rand() % 10; //от 0 до 9 включительно
        for (int j = 0; j < i; j++) //цикл проверки совпадений новой цифры с предыдущими
        {
            if (Number[i] == Number[j])//если новая цифра совпала с одной из предыдущих
            //заново сгенерируем только её 
            {
                i--; //уменьшив для этого счетчик i
                break; //выходим из цикла проверки совпадений
            }
        }
    }
}
//реализация функции преобразования(нарезки) числа введенного игроком в массив цифр
void Slice(int Digit)
{
    //цикл разделегния числа на цифры
    for (int i = Size - 1; i >= 0; i--)
    {
        Value[i] = Digit % 10; //записываем цифру в массив
        Digit /= 10; //"отрезаем" записанную цифру от числа
    }
}
//реализация функции сравнения и определения результата(возвращает кол-во быков)
int Result()
{
    int Bulls = 0, Cows = 0; //быки и коровы
    //проверяем наличие цифр из загаданного числа в числе игрока
    for (int i = 0; i < Size; i++) //цикл прохода по загаданному числу
    {
        if (Number[i] == Value[i]) //если текущая цифра на своем месте в числе игрока(бык)
        {
            Bulls++; //увеличиваем кол-во быков
            continue; //переходим к следующей цифре
        }
        for (int j = 0; j < Size; j++) //цикл поиска цифры из загаданного числа в числе, введенным игроком(корова)
        {
            if (Number[i] == Value[j]) //если текущая цифара из загаданного числа есть в числе, введенном игроком
            {
                Cows++; //увеличиваем кол-во коров
                break; //переходим к следующей цифре загаданного числа
            }
        }
    }
    cout << "Быки: " << Bulls << " Коровы: " << Cows << endl;
    return Bulls;
}
