// ConstPointers
#include <iostream>
#include <stdlib.h>

using namespace std;

int main()
{
    system("chcp 1251");
    system("cls");
    //const int Size = 10;  //константа(переменая с константным(постоянным, неизменяемым) значением)
    //int A[Size]{};
    //const int B[Size]{1,2,3,4,5,6,7,8,9,10}; //массив констант(массив переменных типа int, значенеи которых нельзя изменять)   
    //int C=0;
    //A = &B; //имени массива нельзя присвоить другой адрес,
    //A = B;  //так как имя массива это константный указатель
    //A = &C;

    int A = 12;
    //константный указатель на тип данных int, хранящий адрес переменной А
    int* const ptr_A = &A; //обязательно нужно инициализировать нужным адресом
    int B = 10;
    //константный указатель нельзя изменить,"нацелить" на другой объект и даже обнулить
    //ptr_A = &B;
    //ptr_A++;
    //ptr_A = nullptr;
    cout << ptr_A << endl;
    cout << *ptr_A << endl;
    (*ptr_A) *= 2; //можно изменить значение объекта(переменной), адрес которого хранится в константном указателе
    cout << *ptr_A << endl;
    cout << A << endl;

    int Array[3]{ 1,2,3 };
    int* const ptrArray = Array; //инициализируем константный указатель адресом массива
    cout << *(ptrArray + 1) << endl;
    //ptrArray++;
    //Array++;
    //prtArray += 2;
    system("cls");

    const double PI = 3.14; //константа(переменая с константным(постоянным, неизменяемым) значением)
    const double* ptr_PI = &PI; //указатель на константу(указатель на переменную, чье значенеи нельзя изменить)
    cout << ptr_PI << endl;
    cout << *ptr_PI << endl;
    //PI = 4;
    //(*ptr_PI) *= 2; //нельзя изменить значение объекта(переменной), адрес которого хранится в указателе на константу
    const double g = 9.8;
    ptr_PI = &g; //указатель на констнату можно "перенацелить" на объект того же типа данных,
    //(*ptr_PI) *= 2; //но нельзя изменить значение этого объекта
    cout << ptr_PI << endl;
    cout << *ptr_PI << endl;
    system("cls");
    float HP = 9.75F; //переменная типа float

    const float* PTR = nullptr; //нулевой указатель на константу
    PTR = &HP; //поместив адрес переменной в указатель на константу
    //мы запрещаем изменение значения этой переменной через этот указатель
    cout << PTR << endl;
    cout << *PTR << endl;
    //(*PTR) += 10;
    HP += 10;
    cout << PTR << endl;
    cout << *PTR << endl;

    float Mass[3]{ 1.1F,2.2F,3.3F };
    PTR = Mass;
    cout << *(++PTR) << endl; //можно перемещаться по массиву, изменяя адрес указателя,
    //(*PTR) += 3; //но нельзя изменять значения элементов массива
    Mass[2] = 10;
    PTR = nullptr; //указатель на константу можно обнулять
    system("cls");

    float E = 0.71F;
    //константный указатель на константу, нельзя сменить адрес, "перенацелить" на другой объект или обнулить и
    //нельзя изменить значение объекта на который он указаывает
    const float* const ptr_E = &E; //обязательно инициализировать нужным адресом
    cout << ptr_E << endl;
    cout << *ptr_E << endl;
    //ptr_E++;                  //нельзя изменить адрес
    //*(ptr_E) = 3.14F;         //нельзя изменить значение
    float X = *ptr_E;           //можно скопировать значение объекта 
    cout << *ptr_E + 10 << endl; //можно использовать значение в вычислениях
    E = -100;
    cout << ptr_E << endl;
    cout << *ptr_E << endl;
}
